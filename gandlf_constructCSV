#!usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import argparse
import subprocess
from pathlib import Path
from datetime import date

def main():
  copyrightMessage = 'Contact: software@cbica.upenn.edu\n\n' + 'This program is NOT FDA/CE approved and NOT intended for clinical use.\nCopyright (c) ' + str(date.today().year) + ' University of Pennsylvania. All rights reserved.' 

  parser = argparse.ArgumentParser(prog='GANDLF_ConstructCSV', formatter_class=argparse.RawTextHelpFormatter, description = "Generate training/inference CSV from data directory.\n\n" + copyrightMessage)
  parser.add_argument('-inputDir', type=str, help = 'Input data directory which contains images in specified format', required=True)
  parser.add_argument('-channeslID', type=str, help = 'Channels/modalities identifier string to check for in all files in \'input_dir\'; for example: -channeslID _t1.nii.gz,_t2.nii.gz', required=True)
  parser.add_argument('-labelID', type=str, help = 'Label/mask identifier string to check for in all files in \'input_dir\'; for example: -labelID _seg.nii.gz', required=True)
  parser.add_argument('-outputFile', type=str, help = 'Output CSV file', required=True)
      
  args = parser.parse_args()

  inputDir = os.path.normpath(args.inputDir)
  outputFile = os.path.normpath(args.outputFile)
  channelsID = args.channeslID
  channelsID = channelsID.split(',')
  labelID = args.labelID
  
  outputToWrite = ''
  for i in range(len(channelsID)):
    outputToWrite = outputToWrite + str(i) + ','
  outputToWrite = outputToWrite[:-1] # remove last comma

  # iterate over all subject directories
  for dirs in os.listdir(inputDir):
    
    currentSubjectDir = os.path.join(inputDir, dirs)

    if os.path.isdir(currentSubjectDir): # only consider folders

      filesInDir = os.listdir(currentSubjectDir) # get all files in each directory

      for i in range(len(filesInDir)):

        currentFile = os.path.join(currentSubjectDir, filesInDir[i])

        for channel in channelsID:

          if channel in filesInDir[i]:

            test = 1


# main function
if __name__ == '__main__':
  main()
