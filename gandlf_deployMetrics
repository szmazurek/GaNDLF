#!usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
import os
from GANDLF.cli import deploy_targets, run_deployment, copyrightMessage


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog="GANDLF_DeployMetrics",
        formatter_class=argparse.RawTextHelpFormatter,
        description="Generate a GaNDLF image for metrics calculation.\n\n"
        + copyrightMessage,
    )
    parser.add_argument(
        "-t",
        "--target",
        metavar="",
        type=str,
        help="The target platform. Valid inputs are: "
        + ", ".join(deploy_targets)
        + " .",
        required=True,
    )
    parser.add_argument(
        "-e",
        "--entrypoint",
        metavar="",
        type=str,
        help="A custom python entrypoint script to use instead of the default.",
        default=None,
    )
    parser.add_argument(
        "-r",
        "--mlcube-root",
        metavar="",
        type=str,
        required=True,
        help="Path to an alternative MLCUBE_ROOT directory to use as a template (or a path to a specific mlcube YAML configuration file, in which case we will use the parent directory). The source repository contains an example (https://github.com/mlcommons/GaNDLF/tree/master/mlcube).",
    )
    parser.add_argument(
        "-o",
        "--outputdir",
        metavar="",
        type=str,
        help="Output directory path. For MLCube builds, generates an MLCube directory to be distributed with your MLCube.",
        required=True,
    )

    args = parser.parse_args()

    if not os.path.exists(args.outputdir):
        os.makedirs(args.outputdir, exist_ok=True)

    result = run_deployment(
        args.mlcube_root,
        args.outputdir,
        args.target,
        "metrics",
        entrypoint_script=args.entrypoint,
    )
    assert result, "Deployment to the target platform failed."
